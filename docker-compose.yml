version: '3.2'

networks:
  proxy:
    external: true
  internal:
    external: false


services:

  plp_reverse_proxy:
    container_name: plp_traefik

    image: traefik:${TAG_TRAEFIK}
    restart: always      

    labels:
      
      # Dashboard
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.middlewares=admin

      ### Next line's '$' are doubled as to escape them
      - traefik.http.middlewares.admin.basicauth.users=admin:$$apr1$$Qai983Ya$$XNOr.GZjn3Uggtu3iHqbY/

    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "./etc/traefik/acme.json:/acme.json"
    networks:
      - internal
      - proxy



  plp_web:
    restart: always
    build: 
      context: ./web
      args:
        TAG_NODE: $TAG_NODE
        TAG_VUECLI: $TAG_VUECLI
    labels:
      - traefik.enable=true
      - traefik.http.services.plp_web.loadbalancer.server.port=8080
      
    networks:
      - internal
    depends_on:
      - plp_reverse_proxy
      - plp_api


  plp_mongodb:
    image: mongo:$TAG_MONGODB
    container_name: plp_mongodb
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - mongodata:/data/db
    command: mongod --logpath=/dev/null # --quiet
    networks:
      - internal
      - proxy #temporary, need to find fix
    ports:
      - 27017:27017 #temporary, need to find fix
    depends_on:
      - plp_reverse_proxy


  plp_api:
    restart: always
    container_name: plp_api
    image: im_plp_api_dev
    environment:
      - PYTHONUNBUFFERED=0
    build: 
      context: ./etc/flask
      dockerfile: Dockerfile
      args:
        TAG_PYTHON: $TAG_PYTHON
    command: flask run
    labels:
      - traefik.enable=true
      - traefik.http.services.plp_api.loadbalancer.server.port=5000
    networks:
      - internal
    depends_on:
      - plp_mongodb
      - plp_reverse_proxy
      
volumes:
  mongodata:
    external: true